package org.gephi.ui.statistics.plugin.social;

import javax.swing.JCheckBox;
import org.gephi.graph.api.GraphController;
import org.gephi.lib.validation.BetweenZeroAndOneValidator;
import org.gephi.lib.validation.IntegerIntervalValidator;
import org.gephi.lib.validation.PositiveNumberValidator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;
import org.openide.util.Lookup;

/**
 *
 * @author Alexandru Topirceanu
 */
public class WSNOptimizerPanel extends javax.swing.JPanel {

    private static final int minNodeDelay = 1;
    private static final int maxNodeDelay = 500;
    private static final int minEdgeDelay = 1;
    private static final int maxEdgeDelay = 100;
    private static final int minGrowthRatio = 100;
    private static final int maxGrowthRatio = 1000;

    public WSNOptimizerPanel() {
        initComponents();

        //Disable directed if the graph is undirecteds
        GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
        if (graphController.getModel().isUndirected()) {
            directedRadioButton.setEnabled(false);
        }

        radiusRatioField.setEnabled(growthBox.isSelected());
        animateCheckBox.setEnabled(growthBox.isSelected());
        tAnimateNode.setEnabled(growthBox.isSelected() && animateCheckBox.isSelected());
        tAnimateEdge.setEnabled(growthBox.isSelected() && animateCheckBox.isSelected());
    }

    public static ValidationPanel createValidationPanel(WSNOptimizerPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new WSNOptimizerPanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        // graph parameters
        group.add(innerPanel.extraEdgesField, Validators.REQUIRE_NON_EMPTY_STRING, new IntegerIntervalValidator(0, 100));
        group.add(innerPanel.resolutionField, Validators.REQUIRE_NON_EMPTY_STRING, new BetweenZeroAndOneValidator());
        group.add(innerPanel.wifiRadiusField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());
        group.add(innerPanel.radiusRatioField, Validators.REQUIRE_NON_EMPTY_STRING, new IntegerIntervalValidator(minGrowthRatio, maxGrowthRatio));
        // animation parameters
        group.add(innerPanel.tAnimateNode, Validators.REQUIRE_NON_EMPTY_STRING, new IntegerIntervalValidator(minNodeDelay, maxNodeDelay));
        group.add(innerPanel.tAnimateEdge, Validators.REQUIRE_NON_EMPTY_STRING, new IntegerIntervalValidator(minEdgeDelay, maxEdgeDelay));

        return validationPanel;
    }

    public boolean isDirected() {
        return directedRadioButton.isSelected();
    }

    public void setDirected(boolean directed) {
        buttonGroup1.setSelected(directed ? directedRadioButton.getModel() : undirectedRadioButton.getModel(), true);
        if (!directed) {
            directedRadioButton.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        header = new org.jdesktop.swingx.JXHeader();
        directedRadioButton = new javax.swing.JRadioButton();
        undirectedRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        extraEdgesField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        growthBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        radiusRatioField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        animateCheckBox = new javax.swing.JCheckBox();
        labelResolution = new org.jdesktop.swingx.JXLabel();
        tAnimateNode = new javax.swing.JTextField();
        labelResolution1 = new org.jdesktop.swingx.JXLabel();
        tAnimateEdge = new javax.swing.JTextField();
        labelResolution2 = new org.jdesktop.swingx.JXLabel();
        labelResolution3 = new org.jdesktop.swingx.JXLabel();
        resolutionField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        wifiRadiusField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        header.setDescription(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.header.description_1")); // NOI18N
        header.setDescriptionForeground(new java.awt.Color(51, 102, 255));
        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/ui/statistics/plugin/social/wifi_network.png"))); // NOI18N
        header.setIconPosition(org.jdesktop.swingx.JXHeader.IconPosition.LEFT);
        header.setTitle(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.header.title_1")); // NOI18N
        header.setTitleForeground(new java.awt.Color(0, 0, 153));
        header.setBackground(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(directedRadioButton);
        directedRadioButton.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.directedRadioButton.text")); // NOI18N

        buttonGroup1.add(undirectedRadioButton);
        undirectedRadioButton.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.undirectedRadioButton.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel1.text")); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));

        jLabel2.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel2.text")); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));

        extraEdgesField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        extraEdgesField.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.extraEdgesField.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel3.text")); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));

        growthBox.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.growthBox.text")); // NOI18N
        growthBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                growthBoxStateChanged(evt);
            }
        });

        jLabel4.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel4.text")); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));

        radiusRatioField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        radiusRatioField.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.radiusRatioField.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel5.text")); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));

        animateCheckBox.setSelected(true);
        animateCheckBox.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.animateCheckBox.text")); // NOI18N
        animateCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                animateCheckBoxStateChanged(evt);
            }
        });

        labelResolution.setForeground(new java.awt.Color(102, 102, 102));
        labelResolution.setLineWrap(true);
        labelResolution.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.labelResolution.text")); // NOI18N
        labelResolution.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelResolution.setFont(labelResolution.getFont().deriveFont(labelResolution.getFont().getSize()-1f));
        labelResolution.setPreferredSize(new java.awt.Dimension(500, 12));

        tAnimateNode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tAnimateNode.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.tAnimateNode.text")); // NOI18N

        labelResolution1.setForeground(new java.awt.Color(102, 102, 102));
        labelResolution1.setLineWrap(true);
        labelResolution1.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.labelResolution1.text")); // NOI18N
        labelResolution1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelResolution1.setFont(labelResolution1.getFont().deriveFont(labelResolution1.getFont().getSize()-1f));
        labelResolution1.setPreferredSize(new java.awt.Dimension(500, 12));

        tAnimateEdge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tAnimateEdge.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.tAnimateEdge.text")); // NOI18N

        labelResolution2.setForeground(new java.awt.Color(102, 102, 102));
        labelResolution2.setLineWrap(true);
        labelResolution2.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.labelResolution2.text")); // NOI18N
        labelResolution2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelResolution2.setFont(labelResolution2.getFont().deriveFont(labelResolution2.getFont().getSize()-1f));
        labelResolution2.setPreferredSize(new java.awt.Dimension(500, 12));

        labelResolution3.setForeground(new java.awt.Color(0, 0, 204));
        labelResolution3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelResolution3.setLineWrap(true);
        labelResolution3.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.labelResolution3.text")); // NOI18N
        labelResolution3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelResolution3.setFont(labelResolution3.getFont().deriveFont(labelResolution3.getFont().getSize()-1f));
        labelResolution3.setPreferredSize(new java.awt.Dimension(500, 12));

        resolutionField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        resolutionField.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.resolutionField.text")); // NOI18N

        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel6.text")); // NOI18N

        wifiRadiusField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        wifiRadiusField.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.wifiRadiusField.text")); // NOI18N
        wifiRadiusField.setToolTipText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.wifiRadiusField.toolTipText")); // NOI18N

        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText(org.openide.util.NbBundle.getMessage(WSNOptimizerPanel.class, "WSNOptimizerPanel.jLabel7.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(resolutionField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directedRadioButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(undirectedRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(extraEdgesField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(growthBox)
                                        .addGap(55, 55, 55)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(labelResolution, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelResolution1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelResolution2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(animateCheckBox)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tAnimateEdge, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tAnimateNode, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(radiusRatioField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 309, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(wifiRadiusField)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel7)
                                .addGap(450, 450, 450)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelResolution3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directedRadioButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(undirectedRadioButton)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extraEdgesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resolutionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wifiRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(growthBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusRatioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelResolution, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(animateCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tAnimateNode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelResolution1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tAnimateEdge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelResolution2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(labelResolution3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void animateCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_animateCheckBoxStateChanged
        tAnimateNode.setEnabled(((JCheckBox) evt.getSource()).isSelected());
        tAnimateEdge.setEnabled(((JCheckBox) evt.getSource()).isSelected());
    }//GEN-LAST:event_animateCheckBoxStateChanged

    private void growthBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_growthBoxStateChanged
        radiusRatioField.setEnabled(((JCheckBox) evt.getSource()).isSelected());
        animateCheckBox.setEnabled(((JCheckBox) evt.getSource()).isSelected());

        tAnimateNode.setEnabled(animateCheckBox.isSelected());
        tAnimateEdge.setEnabled(animateCheckBox.isSelected());
    }//GEN-LAST:event_growthBoxStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JCheckBox animateCheckBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton directedRadioButton;
    protected javax.swing.JTextField extraEdgesField;
    protected javax.swing.JCheckBox growthBox;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXLabel labelResolution;
    private org.jdesktop.swingx.JXLabel labelResolution1;
    private org.jdesktop.swingx.JXLabel labelResolution2;
    private org.jdesktop.swingx.JXLabel labelResolution3;
    protected javax.swing.JTextField radiusRatioField;
    protected javax.swing.JTextField resolutionField;
    protected javax.swing.JTextField tAnimateEdge;
    protected javax.swing.JTextField tAnimateNode;
    private javax.swing.JRadioButton undirectedRadioButton;
    protected javax.swing.JTextField wifiRadiusField;
    // End of variables declaration//GEN-END:variables
}
