package org.gephi.ui.statistics.plugin.social;

import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JCheckBox;
import org.gephi.graph.api.Graph;
import org.gephi.graph.api.GraphController;
import org.gephi.graph.api.GraphModel;
import org.gephi.lib.validation.PositiveNumberValidator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;
import org.openide.util.Lookup;

/**
 *
 * @author Alexandru Topirceanu
 */
public class ExamOptimizePanel extends javax.swing.JPanel {

    private int px, py;
    private int w, l;
    protected int netSize;
    private boolean[] links;
    private JCheckBox[] boxes;

    public ExamOptimizePanel() {
        initComponents();

        px = roomPanel.getLocation().x;
        py = roomPanel.getLocation().y;

        resizeRoom();

        checkCenter.setVisible(false);
        boxes = new JCheckBox[]{
            checkNW, checkN, checkNE,
            checkW, checkCenter, checkE,
            checkSW, checkS, checkSE};
    }

    public static ValidationPanel createValidationPanel(ExamOptimizePanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new ExamOptimizePanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        // graph parameters
        group.add(innerPanel.widthField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());
        group.add(innerPanel.lengthField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());

        return validationPanel;
    }

    private void resizeRoom() {
        try {
            w = Integer.parseInt(widthField.getText());
            l = Integer.parseInt(lengthField.getText());

            roomPanel.setSize((int) Math.min(100.0 * w / l, 100), (int) Math.min(100.0 * l / w, 100));
            roomPanel.setLocation(px + (100 - roomPanel.getSize().width) / 2,
                    py + (100 - roomPanel.getSize().height) / 2);

            lRoomSize.setText("Room size: " + w * l);
        } catch (Exception e) {
        }
    }

    protected void setLinks(boolean[] links) {
        this.links = links;
        for (int i = 0; i < links.length; ++i) {
            boxes[i].setSelected(links[i]);
        }

        GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
        GraphModel graphModel = graphController.getModel();
        Graph graph = graphModel.getGraph();
        netSize = graph.getNodeCount();

        lNetSize.setText("Network size: " + netSize);
        lSolutionSize.setText("Number of solutions: ~" + getStirlingApproximation(netSize));
        resizeRoom();
        lRoomSize.setText("Room size: " + w * l);
    }

    protected boolean[] getLinks() {
        for (int i = 0; i < links.length; ++i) {
            links[i] = boxes[i].isSelected();
        }
        return links;
    }

    private String getStirlingApproximation(int n) {

        return "a big number with ~" + (int) (n * 0.7) + "digits";

//        double a = Math.sqrt(Math.PI * (2 * n + 1 / 3));
//        double e = Math.exp(-n);
//        double pow;
//        try {
//            pow = Math.pow(n, n);
//        } catch (Exception ex1) {
//            pow = Double.MAX_VALUE;
//        }
//        
//        double result;
//        try {
//            result = w * pow * a;
//        } catch (Exception ex2) {
//            return " > " + Double.MAX_VALUE;
//        }
//        
//        return "" + result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkGroup = new javax.swing.ButtonGroup();
        labelRandomize1 = new javax.swing.JLabel();
        desriptionLabel = new org.jdesktop.swingx.JXLabel();
        header = new org.jdesktop.swingx.JXHeader();
        widthField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lengthField = new javax.swing.JTextField();
        lNetSize = new javax.swing.JLabel();
        lRoomSize = new javax.swing.JLabel();
        roomPanel = new javax.swing.JPanel();
        linkPanel = new javax.swing.JPanel();
        checkW = new javax.swing.JCheckBox();
        checkN = new javax.swing.JCheckBox();
        checkNE = new javax.swing.JCheckBox();
        checkNW = new javax.swing.JCheckBox();
        checkSW = new javax.swing.JCheckBox();
        checkE = new javax.swing.JCheckBox();
        checkS = new javax.swing.JCheckBox();
        checkSE = new javax.swing.JCheckBox();
        checkCenter = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lSolutionSize = new javax.swing.JLabel();
        lSolutionSize1 = new javax.swing.JLabel();
        iterationField = new javax.swing.JTextField();
        lSolutionSize2 = new javax.swing.JLabel();

        labelRandomize1.setFont(labelRandomize1.getFont().deriveFont(labelRandomize1.getFont().getSize()-1f));
        labelRandomize1.setForeground(new java.awt.Color(102, 102, 102));
        labelRandomize1.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.labelRandomize1.text")); // NOI18N

        setForeground(new java.awt.Color(51, 51, 255));

        desriptionLabel.setLineWrap(true);
        desriptionLabel.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.desriptionLabel.text")); // NOI18N
        desriptionLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        header.setDescription(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.header.description")); // NOI18N
        header.setTitle(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.header.title")); // NOI18N

        widthField.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.widthField.text")); // NOI18N
        widthField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                widthFieldKeyReleased(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel1.toolTipText")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel3.text")); // NOI18N
        jLabel3.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel3.toolTipText")); // NOI18N

        lengthField.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lengthField.text")); // NOI18N
        lengthField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lengthFieldKeyReleased(evt);
            }
        });

        lNetSize.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lNetSize.text")); // NOI18N
        lNetSize.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lNetSize.toolTipText")); // NOI18N

        lRoomSize.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lRoomSize.text")); // NOI18N
        lRoomSize.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lRoomSize.toolTipText")); // NOI18N

        roomPanel.setBackground(new java.awt.Color(204, 204, 255));
        roomPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        linkPanel.setBackground(new java.awt.Color(204, 204, 255));
        linkPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        checkW.setSelected(true);
        checkW.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkW.text")); // NOI18N
        checkW.setOpaque(false);

        checkN.setSelected(true);
        checkN.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkN.text")); // NOI18N
        checkN.setOpaque(false);

        checkNE.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkNE.text")); // NOI18N
        checkNE.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        checkNE.setOpaque(false);

        checkNW.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkNW.text")); // NOI18N
        checkNW.setOpaque(false);

        checkSW.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkSW.text")); // NOI18N
        checkSW.setOpaque(false);

        checkE.setSelected(true);
        checkE.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkE.text")); // NOI18N
        checkE.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        checkE.setOpaque(false);

        checkS.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkS.text")); // NOI18N
        checkS.setOpaque(false);

        checkSE.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkSE.text")); // NOI18N
        checkSE.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        checkSE.setOpaque(false);

        checkCenter.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.checkCenter.text")); // NOI18N
        checkCenter.setOpaque(false);

        javax.swing.GroupLayout linkPanelLayout = new javax.swing.GroupLayout(linkPanel);
        linkPanel.setLayout(linkPanelLayout);
        linkPanelLayout.setHorizontalGroup(
            linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(linkPanelLayout.createSequentialGroup()
                .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(linkPanelLayout.createSequentialGroup()
                        .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(linkPanelLayout.createSequentialGroup()
                                .addComponent(checkW)
                                .addGap(59, 59, 59)
                                .addComponent(checkCenter))
                            .addGroup(linkPanelLayout.createSequentialGroup()
                                .addComponent(checkNW)
                                .addGap(33, 33, 33)
                                .addComponent(checkN)))
                        .addGap(24, 24, 24))
                    .addGroup(linkPanelLayout.createSequentialGroup()
                        .addComponent(checkSW)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkS)
                        .addGap(18, 18, 18)))
                .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(linkPanelLayout.createSequentialGroup()
                        .addComponent(checkSE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(checkNE, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkE, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        linkPanelLayout.setVerticalGroup(
            linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(linkPanelLayout.createSequentialGroup()
                .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkN)
                    .addComponent(checkNE)
                    .addComponent(checkNW))
                .addGap(35, 35, 35)
                .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkE)
                    .addComponent(checkW)
                    .addComponent(checkCenter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(linkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkSW)
                    .addComponent(checkS)
                    .addComponent(checkSE))
                .addContainerGap())
        );

        jLabel4.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.jLabel4.toolTipText")); // NOI18N

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        lSolutionSize.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize.text")); // NOI18N
        lSolutionSize.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize.toolTipText")); // NOI18N

        lSolutionSize1.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize1.text")); // NOI18N
        lSolutionSize1.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize1.toolTipText")); // NOI18N

        iterationField.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.iterationField.text")); // NOI18N
        iterationField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                iterationFieldKeyReleased(evt);
            }
        });

        lSolutionSize2.setForeground(new java.awt.Color(102, 102, 102));
        lSolutionSize2.setText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize2.text")); // NOI18N
        lSolutionSize2.setToolTipText(org.openide.util.NbBundle.getMessage(ExamOptimizePanel.class, "ExamOptimizePanel.lSolutionSize2.toolTipText")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel1)
                                .addGap(29, 29, 29))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lNetSize)
                                        .addComponent(lRoomSize))
                                    .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(75, 75, 75))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(linkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lSolutionSize1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iterationField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lSolutionSize2))
                            .addComponent(lSolutionSize))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(roomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lNetSize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lRoomSize))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(linkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lSolutionSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lSolutionSize1)
                    .addComponent(iterationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize2))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void widthFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_widthFieldKeyReleased
        resizeRoom();
    }//GEN-LAST:event_widthFieldKeyReleased

    private void lengthFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lengthFieldKeyReleased
        resizeRoom();
    }//GEN-LAST:event_lengthFieldKeyReleased

    private void iterationFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iterationFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_iterationFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JCheckBox checkCenter;
    protected javax.swing.JCheckBox checkE;
    protected javax.swing.ButtonGroup checkGroup;
    protected javax.swing.JCheckBox checkN;
    protected javax.swing.JCheckBox checkNE;
    protected javax.swing.JCheckBox checkNW;
    protected javax.swing.JCheckBox checkS;
    protected javax.swing.JCheckBox checkSE;
    protected javax.swing.JCheckBox checkSW;
    protected javax.swing.JCheckBox checkW;
    private org.jdesktop.swingx.JXLabel desriptionLabel;
    private org.jdesktop.swingx.JXHeader header;
    protected javax.swing.JTextField iterationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    protected javax.swing.JLabel lNetSize;
    protected javax.swing.JLabel lRoomSize;
    protected javax.swing.JLabel lSolutionSize;
    protected javax.swing.JLabel lSolutionSize1;
    protected javax.swing.JLabel lSolutionSize2;
    private javax.swing.JLabel labelRandomize1;
    protected javax.swing.JTextField lengthField;
    protected javax.swing.JPanel linkPanel;
    protected javax.swing.JPanel roomPanel;
    protected javax.swing.JTextField widthField;
    // End of variables declaration//GEN-END:variables
}
